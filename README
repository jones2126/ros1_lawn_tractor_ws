This is an Ackermann steering style vehicle (i.e. the size of a lawn tractor) that uses movebase and teb-planner.  For simulation purposes we are leveraging Gazebo to create odom messages.  In the real world the vehicle will be localized using precision (i.e. RTK) GPS.  My primary goal for posting this is to show the vehicle in RVIS and provide the ability to issue 2D Nav goals  to see how the vehicle performs.  The current displayed map in RVIZ was manually created and represents my backyard.  Jeff Sampson did the “heavy lifting” to create most of this repository including the Ackermann style URDF which seems to be a relatively rare find.  

We currently have a Zoom call on Thursday’s at Noon (ET) to discuss this platform and related items.  You are welcome to join in.  Start by joining the Slack Group for more details.

I started with a clean Ubuntu 20.04 build,  loaded ROS Noetic full desktop and installed  
ROS Dependencies
    • $ sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
    • $ sudo apt install python3-rosdep
    • $ sudo rosdep init
    • $ rosdep update

My next step was to download the repository:
$ git clone https://github.com/jones2126/ros1_lawn_tractor_ws.git

I use a Tkinter gui and script to make it easier to run the launch files.  It requires xdotool.
$ sudo apt-get install xdotool

Update .bashrc
$ nano ~/.bashrc (i.e. At the very end of your ~/.bashrc file add: source ~/ros1_lawn_tractor_ws/setup.bash)

Install additional binaries that are required:
    • $ sudo apt-get install ros-noetic-effort-controllers
    • $ sudo apt-get install ros-noetic-ackermann-msgs
    • $ sudo apt-get install ros-noetic-navigation
    • $ sudo apt-get install ros-noetic-teb-local-planner

You are now ready to start up Gazebo, run movebase and RVIZ.  The suggested way to start is:
    • $ cd ~/ros1_lawn_tractor_ws/
    • $ python3 ros_starter.py
Then one-by-one, click the corresponding button, wait for the launch file to complete, then click the next one.  After which you can issue a 2D Nav goal in RVIS to see the vehicle move and the path teb-planner has calculated.

The alternative way of starting the full package (i.e. without using ros_starter.py):
    • $ roslaunch ackermann_vehicle ack_new.launch
    • $ roslaunch ackermann_vehicle nav_newteb.launch
    • $ rviz -d ~/ros1_lawn_tractor_ws/src/ackermann_vehicle/maps/435_tractor.rviz

The folder “support files” is for documents that get created in the development effort that might be useful.

In addition to Jeff Sampson, special thanks to Matt Droter, Vinney Ruia and Juan Eduardo Riva for all their help and contributions leading to this point.

Zoom meeting (Thursdays at Noon (ET)) https://us02web.zoom.us/j/82088036016?pwd=K2lLc1FiWm9MU0dzRStxM2J2b3dpQT09#success

Slack(Lawn Tractor Automation): https://app.slack.com/client/T8WP3RHH7/C8YBK20LX

