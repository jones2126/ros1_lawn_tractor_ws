#!/usr/bin/env python

'''
Read the x, y data for the path, and plot them.

$ python3 /home/tractor/ros1_lawn_tractor_ws/project_notes/code_for_testing/archive/boustrophedon/path_test_plot.py
'''
import math
import csv

# Function to calculate the angle
def calculate_angle(x1, y1, x2, y2):
    '''Calculates the directional angle with respect to the positive X-axis.'''
    angle = math.atan2(y2 - y1, x2 - x1)
    if angle < 0:
        angle += 2 * math.pi
    return angle

# Provided points
points = [
    (-33.6159866810734, -36.0497430904989),
    (-32.765019963034, -35.7567317514874),
    (-43.601763515957, -4.28454324650514),
    (-42.7507967979176, -3.9915319074937),
    (-31.6464995628924, -36.8267754044223),
    (-30.795532844853, -36.5337640654109),
    (-42.3708639936151, -2.91656143047604),
    (-41.5198972755758, -2.6235500914646),
    (-30.0773406864093, -36.4411700841659),
    (-29.2263739683699, -36.1481587451545),
    (-41.0146640380523, -1.91247849558502),
    (-40.1636973200129, -1.61946715657358),
    (-28.3980564326475, -36.3753920825105),
    (-27.5470897146081, -36.0823807434991),
    (-39.7458784279206, -0.654525867827817),
    (-38.8949117098812, -0.361514528816376),
    (-26.7617888736041, -36.1846845281323),
    (-25.9108221555647, -35.8916731891208),
    (-38.5749208436751, 0.887539976849607),
    (-37.7239541256357, 1.18055131586105),
    (-25.1345826356988, -35.9676609863385),
    (-24.2836159176594, -35.6746496473271),
    (-37.5170526847066, 2.75804136056651),
    (-36.6660859666672, 3.05105269957795),
    (-23.4056279014471, -36.0461365344214),
    (-22.5546611834077, -35.75312519541),
    (-36.7747723915661, 5.54507645708344),
    (-35.9238056735267, 5.83808779609488),
    (-21.6924224114183, -36.0788729561167),
    (-20.8414556933789, -35.7858616171053),
    (-35.8394272531002, 7.77141052970997),
    (-34.9884605350609, 8.06442186872141),
    (-20.1124082621798, -35.7247936370768),
    (-19.2614415441404, -35.4317822980653),
    (-34.4768670368627, 8.75702192636484),
    (-33.6259003188233, 9.05003326537629),
    (-18.5864674709272, -35.2136738835817),
    (-17.7355007528878, -34.9206625445702),
    (-32.9622680129531, 9.30108056394948),
    (-32.1113012949137, 9.59409190296092),
    (-17.0605486949292, -34.7024901931448),
    (-16.2095819768898, -34.4094788541333),
    (-31.3363595294413, 9.52187305816923),
    (-30.4853928114019, 9.81488439718067),
    (-15.5346299189311, -34.1913065027079),
    (-14.6836632008918, -33.8982951636964),
    (-29.753246666453, 9.8669530590304),
    (-28.9022799484137, 10.1599643980418),
    (-14.386674667701, -32.5824370322754),
    (-13.5357079496616, -32.289425693264),
    (-28.2392687674294, 10.4128155742652),
    (-27.38830204939, 10.7058269132766),
    (-13.2773201919681, -30.861462769757),
    (-12.4263534739287, -30.5684514307456),
    (-26.7484246499629, 11.0258634695402),
    (-25.8974579319235, 11.3188748085516),
    (-11.7924859545664, -30.2309609154245),
    (-10.941519236527, -29.9379495764131),
    (-25.1190509726402, 11.2365923102012),
    (-24.2680842546008, 11.5296036492126),
    (-9.991248523794, -30.5193606570103),
    (-9.14028180575462, -30.2263493179989),
    (-23.4991925428511, 11.474955436253),
    (-22.6482258248117, 11.7679667752644),
    (-7.8422519488309, -31.817726287966),
    (-6.99128523079152, -31.5247149489546),
    (-21.9491776093346, 11.9161588039145),
    (-21.0982108912952, 12.2091701429259),
    (-6.39928820399685, -31.0656236936648),
    (-5.54832148595747, -30.7726123546533),
    (-20.4356248988348, 12.4632561562853),
    (-19.5846581807954, 12.7562674952968),
    (-4.9828874834645, -30.2363764752426),
    (-4.13192076542511, -29.9433651362312),
    (-18.930497528918, 13.0348224744255),
    (-18.0795308108786, 13.327833813437),
    (-3.44833408675322, -29.7502695442057),
    (-2.59736736871384, -29.4572582051942),
    (-17.2879820462897, 13.2073847411658),
    (-16.4370153282503, 13.5003960801772),
    (-1.79530080952195, -29.6082531709607),
    (-0.944334091482568, -29.3152418319492),
    (-15.6952117695429, 13.5244175759391),
    (-14.8442450515035, 13.8174289149505),
    (-0.372345320563948, -28.7980423823009),
    (0.478621397475437, -28.5050310432895),
    (-13.9290511778781, 13.337888372044),
    (-13.0780844598387, 13.6308997110554),
    (0.094684412471366, -25.2116216150399),
    (0.945651130510751, -24.9186102760285),
    (-12.2326445696598, 13.3539394456353),
    (-11.3816778516204, 13.6469507846467),
    (-0.044956821006855, -19.8633004276602),
    (0.80600989703253, -19.5702890886488),
    (-10.5257287304933, 13.3394694963911),
    (-9.67476201245393, 13.6324808354025),
]

# Calculate angles and create a list for the CSV
data_with_angles = []

for i in range(1, len(points)):
    x1, y1 = points[i-1]
    x2, y2 = points[i]
    angle = calculate_angle(x1, y1, x2, y2)
    data_with_angles.append((x1, y1, x2, y2, angle))


# Write to CSV
csv_file_path = "/home/tractor/ros1_lawn_tractor_ws/project_notes/code_for_testing/archive/boustrophedon/points_with_angles.csv"

with open(csv_file_path, mode='w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(['x1', 'y1', 'x2', 'y2', 'angle'])
    writer.writerows(data_with_angles)
