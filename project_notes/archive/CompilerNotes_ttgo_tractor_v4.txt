 *  Executing task in folder ttgo_tractor_v4: platformio run --target upload --environment ttgo-lora32-v1 

Processing ttgo-lora32-v1 (platform: espressif32; board: ttgo-lora32-v1; framework: arduino)
-----------------------------------------------------------------------------------------------------------------
Verbose mode can be enabled via `-v, --verbose` option
CONFIGURATION: https://docs.platformio.org/page/boards/espressif32/ttgo-lora32-v1.html
PLATFORM: Espressif 32 (6.7.0) > TTGO LoRa32-OLED V1
HARDWARE: ESP32 240MHz, 320KB RAM, 4MB Flash
DEBUG: Current (cmsis-dap) External (cmsis-dap, esp-bridge, esp-prog, iot-bus-jtag, jlink, minimodule, olimex-arm-usb-ocd, olimex-arm-usb-ocd-h, olimex-arm-usb-tiny-h, olimex-jtag-tiny, tumpa)
PACKAGES: 
 - framework-arduinoespressif32 @ 3.20016.0 (2.0.16) 
 - tool-esptoolpy @ 1.40501.0 (4.5.1) 
 - tool-mkfatfs @ 2.0.1 
 - tool-mklittlefs @ 1.203.210628 (2.3) 
 - tool-mkspiffs @ 2.230.0 (2.30) 
 - toolchain-xtensa-esp32 @ 8.4.0+2021r2-patch5
LDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf
LDF Modes: Finder ~ chain, Compatibility ~ soft
Found 37 compatible libraries
Scanning dependencies...
Dependency Graph
|-- LoRa @ 0.8.0
|-- Adafruit SSD1306 @ 2.5.7
|-- SPI @ 2.0.0
Building in release mode
Compiling .pio/build/ttgo-lora32-v1/src/main.cpp.o
Building .pio/build/ttgo-lora32-v1/bootloader.bin
esptool.py v4.5.1
Creating esp32 image...
Merged 1 ELF section
Successfully created esp32 image.
Generating partitions .pio/build/ttgo-lora32-v1/partitions.bin
Linking .pio/build/ttgo-lora32-v1/firmware.elf
Retrieving maximum program size .pio/build/ttgo-lora32-v1/firmware.elf
Checking size .pio/build/ttgo-lora32-v1/firmware.elf
Advanced Memory Usage is available via "PlatformIO Home > Project Inspect"
RAM:   [=         ]   7.0% (used 22864 bytes from 327680 bytes)
Flash: [===       ]  26.8% (used 351533 bytes from 1310720 bytes)
Building .pio/build/ttgo-lora32-v1/firmware.bin
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Configuring upload protocol...
AVAILABLE: cmsis-dap, esp-bridge, esp-prog, espota, esptool, iot-bus-jtag, jlink, minimodule, olimex-arm-usb-ocd, olimex-arm-usb-ocd-h, olimex-arm-usb-tiny-h, olimex-jtag-tiny, tumpa
CURRENT: upload_protocol = esptool
Looking for upload port...
Using manually specified: /dev/ttgo_main
Uploading .pio/build/ttgo-lora32-v1/firmware.bin
esptool.py v4.5.1
Serial port /dev/ttgo_main
Connecting.......
Chip is ESP32-D0WDQ6-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 26MHz
MAC: 78:21:84:88:30:a4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00005fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000e000 to 0x0000ffff...
Flash will be erased from 0x00010000 to 0x00065fff...
Compressed 17536 bytes to 12202...
Writing at 0x00001000... (100 %)
Wrote 17536 bytes (12202 compressed) at 0x00001000 in 0.6 seconds (effective 235.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 146...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (146 compressed) at 0x00008000 in 0.1 seconds (effective 353.1 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 47...
Writing at 0x0000e000... (100 %)
Wrote 8192 bytes (47 compressed) at 0x0000e000 in 0.1 seconds (effective 488.5 kbit/s)...
Hash of data verified.
Compressed 351904 bytes to 200879...
Writing at 0x00010000... (7 %)
Writing at 0x0001b5f0... (15 %)
Writing at 0x00027a8e... (23 %)
Writing at 0x0002d0b9... (30 %)
Writing at 0x00032a7c... (38 %)
Writing at 0x00038065... (46 %)
Writing at 0x0003d8f1... (53 %)
Writing at 0x00042d5e... (61 %)
Writing at 0x000483a0... (69 %)
Writing at 0x0004d823... (76 %)
Writing at 0x00056796... (84 %)
Writing at 0x0005ce27... (92 %)
Writing at 0x00064753... (100 %)
Wrote 351904 bytes (200879 compressed) at 0x00010000 in 4.7 seconds (effective 596.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
========================================= [SUCCESS] Took 30.79 seconds =========================================
 *  Terminal will be reused by tasks, press any key to close it. 